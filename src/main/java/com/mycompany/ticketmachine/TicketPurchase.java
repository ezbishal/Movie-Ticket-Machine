/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ticketmachine;

import java.awt.Image;
import java.awt.List;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.constant.ConstantDescs.NULL;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ezbis
 */

public class TicketPurchase extends javax.swing.JFrame {

    /*
     * Creates new form TicketPurchase
     */
    
    String movie = MovieSelection.selectedMovie;
    
    public TicketPurchase() {
        initComponents();
        
        printReceipt.setEnabled(false);
        
        String[] showTimes = Reader.showTimesReader(movie).toArray(new String[0]);
        showTimesList.setModel(new DefaultComboBoxModel(showTimes));
            
        
        String[] ticketType = Reader.ticketTypeReader().toArray(new String[0]);
        ticketTypeList.setModel(new DefaultComboBoxModel(ticketType));
        
        movieHeading.setText(movie);
        
         ImageIcon imageIcon = new ImageIcon(Reader.imageReader(movie));
                Image image = imageIcon.getImage();
                Image imageScale = image.getScaledInstance(picLabel.getWidth(),picLabel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon scaledIcon = new ImageIcon(imageScale);
                picLabel.setIcon(scaledIcon);
    }
    
    DefaultTableModel model = new DefaultTableModel();
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        payText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        showTimesLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        viewReceipt = new javax.swing.JButton();
        printReceipt = new javax.swing.JButton();
        balanceText = new javax.swing.JTextField();
        payLabel = new javax.swing.JLabel();
        ticketsLabel = new javax.swing.JLabel();
        balanceLabel = new javax.swing.JLabel();
        ticketTypeLabel = new javax.swing.JLabel();
        showTimesList = new javax.swing.JComboBox<>();
        ticketTypeList = new javax.swing.JComboBox<>();
        ticketSpinner = new javax.swing.JSpinner();
        movieHeading = new javax.swing.JLabel();
        picLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "ShowTime", "Type", "Price", "Quantity", "Total"
            }
        ));
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(150);
            table.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        showTimesLabel.setText("Show Times");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        viewReceipt.setText("View Receipt");
        viewReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReceiptActionPerformed(evt);
            }
        });

        printReceipt.setText("Print Receipt");
        printReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printReceiptActionPerformed(evt);
            }
        });

        balanceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceTextActionPerformed(evt);
            }
        });

        payLabel.setText("Pay");

        ticketsLabel.setText("Number of Tickets");

        balanceLabel.setText("Balance");

        ticketTypeLabel.setText("Ticket Type");

        showTimesList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        showTimesList.setSelectedIndex(-1);
        showTimesList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTimesListActionPerformed(evt);
            }
        });

        ticketTypeList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ticketTypeList.setSelectedIndex(-1);

        movieHeading.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        movieHeading.setForeground(new java.awt.Color(102, 0, 0));
        movieHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movieHeading.setText("Ticket Machine");
        movieHeading.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(movieHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(picLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ticketTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ticketTypeList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(showTimesList, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ticketSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ticketsLabel)
                            .addComponent(showTimesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(viewReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(printReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(balanceLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(payLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(payText)
                                            .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(movieHeading)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(showTimesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(picLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(viewReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(printReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(64, 64, 64))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(payLabel)
                                    .addComponent(payText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(balanceLabel))
                                .addGap(64, 64, 64))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showTimesList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ticketTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ticketTypeList, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(ticketsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ticketSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        MovieSelection movieSelector = new MovieSelection();
        movieSelector.setVisible(true);
        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void viewReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReceiptActionPerformed
        // TODO add your handling code here:
        String showTime = (String) showTimesList.getSelectedItem();
        String ticketType = (String) ticketTypeList.getSelectedItem();
        int price = Reader.priceReader(ticketType);
        int quantity = (Integer) ticketSpinner.getValue();
        int total = price * quantity;
        
        if(quantity>0){

            model = (DefaultTableModel)table.getModel();
            model.addRow(new Object[] {
            
                movie,
                showTime,
                ticketType,
                price,
                quantity,
                total
            
            });
            
            viewReceipt.setEnabled(false);
            printReceipt.setEnabled(true);
            payText.requestFocus();
            
        }
        
        else {
            JOptionPane.showMessageDialog(this, "Please select valid number of tickets",
                                   "", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_viewReceiptActionPerformed

    private void balanceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceTextActionPerformed

    private void showTimesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTimesListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showTimesListActionPerformed

    private void printReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printReceiptActionPerformed
        // TODO add your handling code here:

        
        String showTime = (String) showTimesList.getSelectedItem();
        String ticketType = (String) ticketTypeList.getSelectedItem();
        int price = Reader.priceReader(ticketType);
        int quantity = (Integer) ticketSpinner.getValue();
        int total = price * quantity;
        
        int payment = Integer.parseInt(payText.getText());
        
        
        if(payment >= total){
        balanceText.setText(String.valueOf(payment - total));

        File defaultFile = new File("./CSVFiles/sales.csv");
        try {
            // Use the FileWriter and PrintWriter classes to write the data to the file
            FileWriter fileWriter = new FileWriter(defaultFile, true);
            PrintWriter printWriter = new PrintWriter(fileWriter);

            // Write the data to the file
            printWriter.print('\n');
            printWriter.print(movie+',');
            printWriter.print(showTime+',');
            printWriter.print(ticketType+',');
            printWriter.print(price);
            printWriter.print(',');
            printWriter.print(quantity);
            printWriter.print(',');
            printWriter.print(total);

            // Close the PrintWriter to save the file
            printWriter.close();
        } catch (IOException ex) {
            // Handle the exception
        }

        MessageFormat header = new MessageFormat("Receipt");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");

        try {
            table.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(TicketPurchase.class.getName()).log(Level.SEVERE, null, ex);
       
        }
        
         dispose();
        MovieSelection movieSelector = new MovieSelection();
        movieSelector.setVisible(true);
        
    }//GEN-LAST:event_printReceiptActionPerformed
        else if(payText.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Please enter the payment amount!",
                                   "", JOptionPane.ERROR_MESSAGE);
        }
        
        else {
            JOptionPane.showMessageDialog(this, "Please enter the correct payment amount!",
                                   "", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketPurchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JTextField balanceText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel movieHeading;
    private javax.swing.JLabel payLabel;
    private javax.swing.JTextField payText;
    private javax.swing.JLabel picLabel;
    private javax.swing.JButton printReceipt;
    private javax.swing.JLabel showTimesLabel;
    private javax.swing.JComboBox<String> showTimesList;
    private javax.swing.JTable table;
    private javax.swing.JSpinner ticketSpinner;
    private javax.swing.JLabel ticketTypeLabel;
    private javax.swing.JComboBox<String> ticketTypeList;
    private javax.swing.JLabel ticketsLabel;
    private javax.swing.JButton viewReceipt;
    // End of variables declaration//GEN-END:variables


}